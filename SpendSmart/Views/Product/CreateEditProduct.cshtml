@{
    ViewData["Title"] = "Create / Edit";
    var isEdit = Model != null && Model.Id != 0;
}

@model SpendSmart.Models.Product?

<div id="formResult" class="mt-3"></div>
<div class="container mt-4">
    <h2 class="text-center">@((isEdit ? "Edit" : "Create") + " a Product")</h2>

    <form id="productForm">
        <input hidden asp-for="Id"/>

        <label class="mt-4">Name</label>
        <input class="form-control"
               type="text"
               asp-for="Name"
               step="0.01"
               placeholder="@(isEdit ? Model?.Name : "e.g. Gymshark T-Shirt")"/>

        <label class="mt-4">Value ($)</label>
        <input class="form-control"
               type="number"
               asp-for="Value"
               step="0.01"
               placeholder="@(isEdit ? Model?.Value.ToString("0.00") : "e.g. 123.45")"/>

        <label class="mt-4">Description</label>
        <input class="form-control"
               type="text"
               asp-for="Description"
               placeholder="@(isEdit ? Model?.Description : "Add a description")"/>

        <label class="mt-4">Product Type</label>
        <select asp-for="ProductTypeId" id="productTypeDropdown" class="form-control">
            <option value="">-- Select Product Type --</option>
            @foreach (var productType in ViewBag.ProductTypes)
            {
                @if (isEdit && Model?.ProductTypeId == int.Parse(productType.Value))
                {
                    <option value="@productType.Value" selected>@productType.Text</option>
                }
                else
                {
                    <option value="@productType.Value">@productType.Text</option>
                }
            }

        </select>

        <label class="mt-4">Sub Type</label>
        <select asp-for="SubTypeId" id="subTypeDropdown" class="form-control">
            <option value="">-- Select Sub Type --</option>
        </select>


        <button class="btn btn-primary mt-4" type="submit">Ok</button>
    </form>


</div>

@section Scripts {

    <!-- Client-side validation (optional but useful) -->
    <partial name="_ValidationScriptsPartial"/>

    <script>
        $(document).ready(function () {
            const isEdit = @(isEdit.ToString().ToLower());
            const selectedProductTypeId = '@(Model?.ProductTypeId)';
            const selectedSubTypeId = '@(Model?.SubTypeId)';

            function loadSubTypes(productTypeId, selectedSubTypeId = null) {
                $.ajax({
                    url: '@Url.Action("GetSubTypes", "ProductType")',
                    type: 'GET',
                    data: { typeId: productTypeId },
                    success: function (subTypes) {
                        var options = '<option value="">-- Select Sub Type --</option>';
                        $.each(subTypes, function (i, sub) {
                            const selected = sub.id == selectedSubTypeId ? 'selected' : '';
                            options += `<option value="${sub.id}" ${selected}>${sub.name}</option>`;
                        });
                        $('#subTypeDropdown').html(options);
                    },
                    error: function () {
                        $('#subTypeDropdown').html('<option value="">-- Failed to load --</option>');
                    }
                });
            }

            // Prefill if editing
            if (isEdit && selectedProductTypeId) {
                $('#productTypeDropdown').val(selectedProductTypeId);
                loadSubTypes(selectedProductTypeId, selectedSubTypeId);
            }

            // On change
            $('#productTypeDropdown').on('change', function () {
                var typeId = $(this).val();
                if (!typeId) {
                    $('#subTypeDropdown').html('<option value="">-- Select Sub Type --</option>');
                    return;
                }

                loadSubTypes(typeId);
            });

            $('#productForm').submit(function (e) {
                e.preventDefault();

                const form = $(this);
                const formData = form.serialize();

                $.ajax({
                    url: '@Url.Action("CreateEditProductForm", "Product")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        const message = isEdit
                            ? "Product edited successfully!"
                            : "Product created successfully!";

                        $('#formResult')
                            .hide()
                            .html(`<div class="alert alert-success">${message}</div>`)
                            .fadeIn();

                        setTimeout(function () {
                            window.location.href = '@Url.Action("Products", "Product")';
                        }, 1500);
                    },
                    error: function (xhr) {
                        $('#formResult')
                            .hide()
                            .html('<div class="alert alert-danger">Something went wrong. Please try again.</div>')
                            .fadeIn();
                    }
                });
            });
        });
    </script>
}
