// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpendSmart.Data;

#nullable disable

namespace SpendSmart.Data.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20250721043855_ConnectedEntities")]
    partial class ConnectedEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("SpendSmart.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SpendSmart.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductTypeName = "Apparel"
                        },
                        new
                        {
                            Id = 2,
                            ProductTypeName = "Mobile Phone"
                        },
                        new
                        {
                            Id = 3,
                            ProductTypeName = "Laptop"
                        },
                        new
                        {
                            Id = 4,
                            ProductTypeName = "Stationery"
                        },
                        new
                        {
                            Id = 5,
                            ProductTypeName = "Headphones"
                        });
                });

            modelBuilder.Entity("SpendSmart.Models.Product", b =>
                {
                    b.HasOne("SpendSmart.Models.ProductType", "ProductTypeName")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductTypeName");
                });
#pragma warning restore 612, 618
        }
    }
}
